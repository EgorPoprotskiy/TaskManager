package com.egorpoprotskiy.taskmanager.data

import kotlinx.coroutines.flow.Flow

//4 Создание интерфейса репозитория.

//Можно создавать один репозиторий, но только в случае, если у меня один источник данных.
/*Если я планирую испльзовать несколько источников данный, например использовать сеть для получения API,
то неоходимо использовать интерфейс репозитория.*/
/*
Репозиторий — это слой абстракции, который изолирует остальные части приложения
(например, ViewModel) от прямой работы с источниками данных (такими как Room, сетевые запросы и т.д.).
Это делает код более модульным, тестируемым и легко поддерживаемым.
 */
interface TaskRepository {
    suspend fun insertTask(task: Task)
    suspend fun updateTask(task: Task)
    suspend fun deleteTask(task: Task)
    //Функции, которые возвращают Flow, обычно не требуют ключевого слова suspend. Flow сам по себе является асинхронным потоком данных.
    fun getAllTasks(): Flow<List<Task>>
    //Функция получения одного элемента
    fun getTaskById(id: Long): Flow<Task?>
}